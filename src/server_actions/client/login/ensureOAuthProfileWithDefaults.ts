/* eslint-disable @typescript-eslint/no-explicit-any */
// This file is auto-generated by scripts/gen_server_action_hooks.ts
import { ensureOAuthProfileWithDefaults } from "../../definitions/login/index";
import {
  useMutation,
  useQuery,
  useQueryClient,
  type QueryClient,
} from "@tanstack/react-query";

export const useEnsureOAuthProfileWithDefaults = () => {
  const queryKey = ["ensureOAuthProfileWithDefaults"];
  const dependantQueryKeys = [["ensureOAuthProfileWithDefaults"]];
  const queryClient = useQueryClient();
  const query = useQuery(
    {
      queryKey,
      queryFn: async () => await ensureOAuthProfileWithDefaults("read"),
    },
    queryClient,
  );
  const update = useMutation(
    {
      mutationFn: async (data: {
        timezone: string;
        emailEnabled?: boolean;
        emailFrequency?: "immediate" | "daily" | "weekly";
      }) => {
        dependantQueryKeys.forEach((queryKey) =>
          queryClient.cancelQueries({ queryKey }),
        );
        return await ensureOAuthProfileWithDefaults("update", data);
      },

      onSettled: () => {
        dependantQueryKeys.forEach((queryKey) =>
          queryClient.invalidateQueries({ queryKey }),
        );
      },
    },
    queryClient,
  );
  return { ...query, update };
};
export const getEnsureOAuthProfileWithDefaultsQueryKey = () => {
  return ["ensureOAuthProfileWithDefaults"] as const;
};
export const getEnsureOAuthProfileWithDefaultsQueryOptions = () => {
  return {
    queryKey: getEnsureOAuthProfileWithDefaultsQueryKey(),
    queryFn: async () => ensureOAuthProfileWithDefaults("read"),
  } as const;
};
export const prefetchEnsureOAuthProfileWithDefaults = () => (qc: QueryClient) =>
  qc.prefetchQuery(getEnsureOAuthProfileWithDefaultsQueryOptions());
