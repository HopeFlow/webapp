/* eslint-disable @typescript-eslint/no-explicit-any */
// This file is auto-generated by scripts/gen_server_action_hooks.ts
import { userProfileCrud } from "../../definitions/create_account/index";
import { ProfileUpdateInput } from "../../definitions/common/profile";
import {
  useMutation,
  useQuery,
  useQueryClient,
  type QueryClient,
} from "@tanstack/react-query";

export const useCreateAccount = () => {
  const queryKey = ["createAccount"];
  const dependantQueryKeys = [["createAccount"]];
  const queryClient = useQueryClient();
  const query = useQuery(
    { queryKey, queryFn: async () => await userProfileCrud("read") },
    queryClient,
  );
  const update = useMutation(
    {
      mutationFn: async (data: ProfileUpdateInput) => {
        dependantQueryKeys.forEach((queryKey) =>
          queryClient.cancelQueries({ queryKey }),
        );
        return await userProfileCrud("update", data);
      },

      onSettled: () => {
        dependantQueryKeys.forEach((queryKey) =>
          queryClient.invalidateQueries({ queryKey }),
        );
      },
    },
    queryClient,
  );
  return { ...query, update };
};
export const getCreateAccountQueryKey = () => {
  return ["createAccount"] as const;
};
export const getCreateAccountQueryOptions = () => {
  return {
    queryKey: getCreateAccountQueryKey(),
    queryFn: async () => userProfileCrud("read"),
  } as const;
};
export const prefetchCreateAccount = () => (qc: QueryClient) =>
  qc.prefetchQuery(getCreateAccountQueryOptions());
